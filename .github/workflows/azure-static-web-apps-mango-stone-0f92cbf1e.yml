name: Azure Static Web Apps CI/CD

on:

  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:

      - name: Get Commit Info
        run: |
          commit="${{ github.event.commits[0].message }}"
          function=$(awk 'BEGIN{FS=OFS="|"} {print $1}' <<< ${commit})
          link=$(awk 'BEGIN{FS=OFS="|"} {print $2}' <<< ${commit})
          twitter=$(awk 'BEGIN{FS=OFS="|"} {print $3}' <<< ${commit})
          mastodon=$(awk 'BEGIN{FS=OFS="|"} {print $4}' <<< ${commit})
          name=$(awk 'BEGIN{FS=OFS="|"} {print $5}' <<< ${commit})

          echo "FUNCTION=$function" >> $GITHUB_ENV
          echo "TWITTER=$twitter" >> $GITHUB_ENV
          echo "MASTODON=$mastodon" >> $GITHUB_ENV
          echo "LINK=$link" >> $GITHUB_ENV
          echo "NAME=$name" >> $GITHUB_ENV

      - name: Show Commit Info
        run: |
          echo "Name: ${{ env.NAME}}"
          echo "Twitter: ${{ env.TWITTER}}"
          echo "Mastodon: ${{ env.MASTODON}}"
          echo "Link: ${{ env.LINK}}"

      - name: Check Twitter Handle
        if: env.TWITTER == ''
        run: |
          echo "TWITTER=${{ env.NAME }}" >> $GITHUB_ENV
          echo "Twitter is ${{ env.TWITTER }}"

      - name: Check Mastodon Handle
        if: env.MASTODON == ''
        run: |
          echo "MASTODON=${{ env.NAME }}" >> $GITHUB_ENV
          echo "Mastodon is ${{ env.MASTODON }}"

      - uses: actions/checkout@v2

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2.4.13
        with:
          hugo-version: "latest"  # Hugo version: latest OR x.y.z
          extended: true

      - name: Build
        run: hugo

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_MANGO_STONE_0F92CBF1E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          app_location: "/" # App source code path
          app_artifact_location: "public" # Built app content directory - optional

      - uses: smapiot/send-tweet-v2-action@v1
        name: Send Tweet
        if: env.FUNCTION == 'PUBLISH' && always()
        with:
          status: "Had a great time chatting with ${{ env.TWITTER }} on @CoffeeAndOSS today about all kinds of #tech topics. Video is live on @youtube and podcast is available wherever you find them. Take a look/listen and thanks! https://www.coffeeandopensource.com/guest/${{ env.LINK }}.html"
          consumer-key: ${{ secrets.TWITTER_CONSUMER_API_KEY }}
          consumer-secret: ${{ secrets.TWITTER_CONSUMER_API_SECRET }}
          access-token: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          access-token-secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}

      - name: Send toot to Mastodon
        id: mastodon
        if: env.FUNCTION == 'PUBLISH' && always()
        uses: cbrgm/mastodon-github-action@v1
        with:
          message: "Had a great time chatting with ${{ env.MASTODON }} on @CoffeeAndOSS@mastodon.social today about all kinds of #tech topics. Video is live on youtube and podcast is available wherever you find them. Take a look/listen and thanks! https://www.coffeeandopensource.com/guest/${{ env.LINK }}.html"
          visibility: "public" # default: public
        env:
          MASTODON_URL: "https://fosstodon.org/" # https://example.social
          MASTODON_ACCESS_TOKEN: ${{ secrets.MASTODON_ACCESS_TOKEN }} # access token

      - name: Post to LinkedIn
        if: env.FUNCTION == 'PUBLISH' && always()
        id: linkedIn
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.LinkedInUrl }}
          method: POST
          contentType: "application/json"
          data: '{"url": "https://www.coffeeandopensource.com/guest/${{ env.LINK }}.html", "message": "Had a great time chatting with ${{ env.NAME }} on Coffee and OSS about all kinds of #tech topics. Video is live on YouTube and podcast is available wherever you find them. Take a look/listen and thanks!"}'

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          app_location: "/"
          app_artifact_location: "public"
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_MANGO_STONE_0F92CBF1E }}
          action: "close"
